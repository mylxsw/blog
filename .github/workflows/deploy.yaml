name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - synchronize

concurrency:
  group: "deploy"
  cancel-in-progress: false

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Version
        id: version
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            return process.env.GITHUB_SHA.substring(0, 7);

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ vars.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
  
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ vars.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    if: ${{ github.event_name != 'pull_request' }}
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy docker container to k8s
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: root
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          echo ${{ vars.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build.outputs.version }} >> /tmp/image